Index: wide-dhcpv6-20080615/dhcp6c.c
===================================================================
--- wide-dhcpv6-20080615.orig/dhcp6c.c	2019-11-28 09:16:17.566991349 +0800
+++ wide-dhcpv6-20080615/dhcp6c.c	2019-11-28 09:34:12.357092324 +0800
@@ -93,6 +93,10 @@
 
 #include <json/json.h>
 
+#if 1 //for Orange ACT_0005
+extern int addAftr;
+int restart_dhcp6c = 0;
+#endif
 extern struct dhcp6c_Msg dhcp6cMsg;
 //extern struct json_object *dhcp6cMsg;
 extern zcfgRet_t dhcp6MsgSend(int, int, const char *);
@@ -115,6 +119,7 @@
 #define DEFAULT_KEYFILE SYSCONFDIR "/dhcp6cctlkey"
 #define CTLSKEW 300
 
+
 static char *conffile = DHCP6C_CONF;
 
 static const struct sockaddr_in6 *sa6_allagent;
@@ -315,7 +320,9 @@
 	static struct sockaddr_in6 sa6_allagent_storage;
 	int error, on = 1;
     struct ifreq ifr;
-
+#if 1 //for Orange ACT_0005	
+	addAftr = 0;
+#endif
 	/* get our DUID */
 	if (get_duid(DUID_FILE, &client_duid)) {
 		dprintf(LOG_ERR, FNAME, "failed to get a DUID");
@@ -2314,6 +2321,23 @@
 	return (0);
 }
 
+/*zyxel*/
+int dhcp6sConfDSlitenameListCheck(struct dhcp6_optinfo *opt)
+{
+	struct dhcp6_listval *d;
+
+	dprintf(LOG_ERR, FNAME, "%s : Enter\n", __FUNCTION__);
+
+
+	d = TAILQ_FIRST(&opt->dslitename_list);
+	if(d != NULL)
+		restart_dhcp6c = 0;//for Orange ACT_0005
+	else
+		restart_dhcp6c = 1; //for Orange ACT_0005
+
+	return 0;
+}
+
 static int
 client6_recvreply(ifp, dh6, len, optinfo)
 	struct dhcp6_if *ifp;
@@ -2330,7 +2354,6 @@
 	char *msg = NULL;
 	int msgLen = 0;
 /*end*/ 
-
 	/* find the corresponding event based on the received xid */
 	ev = find_event_withid(ifp, ntohl(dh6->dh6_xid) & DH6_XIDMASK);
 	if (ev == NULL) {
@@ -2551,6 +2574,15 @@
 
 	/*zyxel*/
 	dhcp6sConfDnsListUpdate(optinfo);
+#if 1 //for Orange ACT_0005
+	dhcp6sConfDSlitenameListCheck(optinfo);
+	if(restart_dhcp6c && addAftr){
+		free_resources(NULL);
+		sleep(10);
+		client6_startall(1);
+		return 0;
+	}	
+#endif
 
 	if (!TAILQ_EMPTY(&optinfo->ntp_list)) {
 		struct dhcp6_listval *d;
@@ -3114,7 +3146,9 @@
 		 * Solution: always set to '\0', but better to figure out why!
 		 */
 		if (strlen(domainName) > 0) domainName[strlen(domainName)-1]='\0';
-	}
+		restart_dhcp6c = 0;//for Orange ACT_0005
+	}else
+		restart_dhcp6c = 1; //for Orange ACT_0005
 
 	addDnsInfoToMsg(nameserver, domainName);
 
Index: wide-dhcpv6-20080615/config.c
===================================================================
--- wide-dhcpv6-20080615.orig/config.c	2019-11-28 09:16:17.578991350 +0800
+++ wide-dhcpv6-20080615/config.c	2019-11-28 09:16:17.618991352 +0800
@@ -71,7 +71,9 @@
 #include "zcfg_fe_rdm_access.h"
 
 extern int errno;
-
+#if 1 //for Orange ACT_0005
+int addAftr;
+#endif
 struct prefix_ifconf *prefix_ifconflist;
 struct dhcp6_list siplist, sipnamelist, dnslist, dnsnamelist, ntplist;
 struct dhcp6_list nislist, nisnamelist;
@@ -1557,6 +1559,11 @@
 	struct ia_conf *iac;
 
 	for (cfl = cfl0; cfl; cfl = cfl->next) {
+#if 1 //for Orange ACT_0005
+		if(cfl->type == DHCPOPT_DSLITENAME){
+			addAftr = 1;
+		}
+#endif
 		switch(cfl->type) {
 		case DHCPOPT_RAPID_COMMIT:
 			switch (opcode) {
